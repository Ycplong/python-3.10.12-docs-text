结构化标记处理工具
******************

Python 支持各种模块，以处理各种形式的结构化数据标记。 这包括使用标准通
用标记语言（SGML）和超文本标记语言（HTML）的模块，以及使用可扩展标记语
言（XML）的几个接口。

* "html" --- 超文本标记语言支持

* "html.parser" --- 简单的 HTML 和 XHTML 解析器

  * HTML 解析器的示例程序

  * "HTMLParser" 方法

  * 例子

* "html.entities" --- HTML 一般实体的定义

* XML处理模块

  * XML 漏洞

  * "defusedxml" 包

* "xml.etree.ElementTree" ---  ElementTree XML API

  * 教程

    * XML 树和元素

    * 解析 XML

    * 用于非阻塞解析的拉取 API

    * 查找感兴趣的元素

    * 修改XML文件

    * 构建 XML 文档

    * 解析带有命名空间的 XML

  * XPath支持

    * 示例

    * 支持的XPath语法

  * 参考

    * 函数

  * XInclude 支持

    * 示例

  * 参考

    * 函数

    * 元素对象

    * ElementTree 对象

    * QName 对象

    * TreeBuilder 对象

    * XMLParser对象

    * XMLPullParser对象

    * 异常

* "xml.dom" --- 文档对象模型 API

  * 模块内容

  * DOM 中的对象

    * DOMImplementation 对象

    * 节点对象

    * 节点列表对象

    * 文档类型对象

    * Document 对象

    * 元素对象

    * Attr 对象

    * NamedNodeMap 对象

    * 注释对象

    * Text 和 CDATASection 对象

    * ProcessingInstruction 对象

    * 异常

  * 一致性

    * 类型映射

    * 访问器方法

* "xml.dom.minidom" --- 最小化的 DOM 实现

  * DOM 对象

  * DOM 示例

  * minidom 和 DOM 标准

* "xml.dom.pulldom" --- 支持构建部分 DOM 树

  * DOMEventStream 对象

* "xml.sax" --- 支持 SAX2 解析器

  * SAXException 对象

* "xml.sax.handler" --- SAX 处理句柄的基类

  * ContentHandler 对象

  * DTDHandler 对象

  * EntityResolver 对象

  * ErrorHandler 对象

  * LexicalHandler 对象

* "xml.sax.saxutils" --- SAX 工具集

* "xml.sax.xmlreader" --- 用于 XML 解析器的接口

  * XMLReader 对象

  * IncrementalParser 对象

  * Locator 对象

  * InputSource 对象

  * "Attributes" 接口

  * "AttributesNS" 接口

* "xml.parsers.expat" ---  使用 Expat 的快速 XML 解析

  * XMLParser对象

  * ExpatError 异常

  * 示例

  * 内容模型描述

  * Expat 错误常量
