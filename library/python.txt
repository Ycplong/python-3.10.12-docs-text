Python运行时服务
****************

本章里描述的模块提供了和Python解释器及其环境交互相关的广泛服务。以下是
综述：

* "sys" --- 系统相关的参数和函数

* "sysconfig" —— 提供对 Python 配置信息的访问支持

  * 配置变量

  * 安装路径

  * 其他功能

  * 将 "sysconfig" 作为脚本使用

* "builtins" --- 内建对象

* "__main__" --- 最高层级代码环境

  * "__name__ == '__main__'"

    * 什么是“最高层级代码环境”？

    * 常见用法

    * 打包考量

  * Python 包中的 "__main__.py"

    * 常见用法

  * "import __main__"

* "warnings" —— 警告信息的控制

  * 警告类别

  * 警告过滤器

    * 警告过滤器的介绍

    * 默认警告过滤器

    * 重写默认的过滤器

  * 暂时禁止警告

  * 测试警告

  * 为新版本的依赖关系更新代码

  * 可用的函数

  * 可用的上下文管理器

* "dataclasses" --- 数据类

  * 模块内容

  * 初始化后处理

  * 类变量

  * 仅初始化变量

  * 冻结的实例

  * 继承

  * "__init__()" 中仅限关键字字段的重新排序

  * 默认工厂函数

  * 可变的默认值

  * Descriptor-typed fields

* "contextlib" --- 为 "with"语句上下文提供的工具

  * 工具

  * 例子和配方

    * 支持可变数量的上下文管理器

    * 捕获 "__enter__" 方法产生的异常

    * 在一个 "__enter__" 方法的实现中进行清理

    * 替换任何对 "try-finally" 和旗标变量的使用

    * 将上下文管理器作为函数装饰器使用

  * 单独使用，可重用并可重进入的上下文管理器

    * 重进入上下文管理器

    * 可重用的上下文管理器

* "abc" --- 抽象基类

* "atexit" --- 退出处理器

  * "atexit" 示例

* "traceback" —— 打印或读取堆栈的跟踪信息

  * "TracebackException" 对象

  * "StackSummary" 对象

  * "FrameSummary" 对象

  * 回溯示例

* "__future__" --- Future 语句定义

* "gc" --- 垃圾回收器接口

* "inspect" --- 检查对象

  * 类型和成员

  * 获取源代码

  * 使用 Signature 对象对可调用对象进行内省

  * 类与函数

  * 解释器栈

  * 静态地获取属性

  * 生成器和协程的当前状态

  * 代码对象位标志

  * 命令行界面

* "site" —— 指定域的配置钩子

  * Readline 配置

  * 模块内容

  * 命令行界面
